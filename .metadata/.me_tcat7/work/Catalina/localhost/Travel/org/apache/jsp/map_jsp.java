/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.56
 * Generated at: 2019-07-12 05:43:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class map_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no, width=device-width\">\r\n");
      out.write("    <meta name=\"renderer\" content=\"webkit|ie-comp|ie-stand\">\r\n");
      out.write("    <meta name=\"baidu-site-verification\" content=\"zyu2elKF1h\">\r\n");
      out.write("    <meta name=\"robots\" content=\"noodp\">\r\n");
      out.write("    <title>定位</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"http://cache.amap.com/lbs/static/main1119.css\"/>\r\n");
      out.write(" \r\n");
      out.write("    <script type=\"text/javascript\" src=\"http://webapi.amap.com/maps?v=1.3&key=8cc355b1d46538c64a75d9a0b57ea744\"></script>   \r\n");
      out.write("    <script type=\"text/javascript\" src=\"http://cache.amap.com/lbs/static/addToolbar.js\"></script>\r\n");
      out.write("    <style type=\"text/css\">\r\n");
      out.write("        /*删除高德地图的logo*/\r\n");
      out.write("          .amap-logo {\r\n");
      out.write("            right: 0 !important;\r\n");
      out.write("            left: auto !important;\r\n");
      out.write("            display: none;\r\n");
      out.write("        }\r\n");
      out.write("         \r\n");
      out.write("        .amap-copyright {\r\n");
      out.write("            right: 70px !important;\r\n");
      out.write("            left: auto !important;\r\n");
      out.write("        } \r\n");
      out.write("    </style>\r\n");
      out.write("  </head>\r\n");
      out.write("  \r\n");
      out.write("  <body>\r\n");
      out.write("    <div id='container' style=\"height: 600px;width: 500px\"></div>\r\n");
      out.write("<div id=\"tip\"></div>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    var map, geolocation;\r\n");
      out.write("    //加载地图，调用浏览器定位服务\r\n");
      out.write("    map = new AMap.Map('container', {\r\n");
      out.write("        resizeEnable: true\r\n");
      out.write("    });\r\n");
      out.write("    map.plugin('AMap.Geolocation', function () {\r\n");
      out.write("        geolocation = new AMap.Geolocation({\r\n");
      out.write("            enableHighAccuracy: true,//是否使用高精度定位，默认:true\r\n");
      out.write("            timeout: 10000,          //超过10秒后停止定位，默认：无穷大\r\n");
      out.write("            buttonOffset: new AMap.Pixel(10, 20),//定位按钮与设置的停靠位置的偏移量，默认：Pixel(10, 20)\r\n");
      out.write("            zoomToAccuracy: false,      //定位区域\r\n");
      out.write("            buttonPosition: 'RB'\r\n");
      out.write("        });\r\n");
      out.write("        map.addControl(geolocation);\r\n");
      out.write("        geolocation.getCurrentPosition();\r\n");
      out.write("        AMap.event.addListener(geolocation, 'complete', onComplete);//返回定位信息\r\n");
      out.write("        AMap.event.addListener(geolocation, 'error', onError);      //返回定位出错信息\r\n");
      out.write("    });\r\n");
      out.write(" \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    //解析定位结果\r\n");
      out.write("    function onComplete(data) {\r\n");
      out.write("        var str = ['定位成功'];\r\n");
      out.write("        str.push('经度：' + data.position.getLng());      \r\n");
      out.write("        str.push('纬度：' + data.position.getLat());\r\n");
      out.write("        str.push('精度：' + data.accuracy + ' 米');\r\n");
      out.write("        str.push('是否经过偏移：' + (data.isConverted ? '是' : '否'));       \r\n");
      out.write("        document.getElementById('tip').innerHTML = str.join('<br>');\r\n");
      out.write("    }\r\n");
      out.write("    //解析定位错误信息\r\n");
      out.write("    function onError(data) {\r\n");
      out.write("        document.getElementById('tip').innerHTML = '定位失败';\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
